/*
  Commandline via Nexus: gradle -DuseNexus=true --init-script %GRADLE_USER_HOME%\init.gradle build
                 direct: gradle --init-script %GRADLE_USER_HOME%\init.gradle build
*/
subprojects {
	buildscript {
		ext {
			// Common spring component versions	
			apply from: "${gradleUserHome}/spring-versions.gradle", to: ext
		}
		
		// Common repositories:
		apply from: "${gradleUserHome}/repos.gradle", to: buildscript
		
	    dependencies {
	        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	        classpath("io.spring.gradle:dependency-management-plugin:${springGradleVersion}")
	    }
    }

	apply plugin: 'java'
	apply plugin: 'eclipse'

	dependencies {
		compile("org.slf4j:slf4j-simple:${slf4jVersion}")
		
		runtime("org.springframework.boot:spring-boot-devtools")		
	}
	
	project(':kafka-message') {
	}
	
	project(':kafka-source') {
	}
	
	project(':kafka-processor') {
	}
	
	project(':kafka-sink') {
	}
}

configure(subprojects.findAll { it.name == 'kafka-source' || it.name == 'kafka-processor' ||
								 it.name == 'kafka-sink'}) { 
    dependencies {
		compile("org.springframework.boot:spring-boot-starter-actuator")
		compile("org.springframework.cloud:spring-cloud-starter-stream-kafka")
		// Necessary for @SpringBootApplication(exclude = TestSupportBinderAutoConfiguration.class) 
		compile('org.springframework.cloud:spring-cloud-stream-test-support')
		
		testCompile("org.springframework.boot:spring-boot-starter-test")
		// Has to be excluded from BinderAutoConfiguration, when running production code:
		// @SpringBootApplication(exclude = TestSupportBinderAutoConfiguration.class)
		testCompile('org.springframework.cloud:spring-cloud-stream-test-support')
    }
}

